{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Tec\\\\uqwxd-react_labs\\\\todo_list\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Tec\\\\uqwxd-react_labs\\\\todo_list\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Tec\\\\uqwxd-react_labs\\\\todo_list\\\\src\\\\App.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nvar App = function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      todos = _useState2[0],\n      setTodos = _useState2[1]; // Estado para almacenar las tareas\n\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      todoEditing = _useState4[0],\n      setTodoEditing = _useState4[1]; // Estado para la tarea que se está editando\n\n\n  function handleSubmit(e) {\n    // Maneja el envío del formulario para agregar una nueva tarea\n    e.preventDefault(); // Obtener el valor del campo de texto para la nueva tarea\n\n    var todo = document.getElementById('todoAdd').value;\n    var newTodo = {\n      id: new Date().getTime(),\n      // Asigna un ID único basado en la marca de tiempo\n      text: todo.trim(),\n      // Elimina los espacios en blanco al principio y al final del texto\n      completed: false // Por defecto, la tarea no está completada\n\n    };\n\n    if (newTodo.text.length > 0) {\n      // Verifica si el texto de la tarea no está vacío\n      setTodos(_toConsumableArray(todos).concat(newTodo)); // Agrega la nueva tarea al estado de las tareas\n    } else {\n      alert(\"Enter Valid Task\"); // Muestra una alerta si la tarea está vacía\n    }\n\n    document.getElementById('todoAdd').value = \"\"; // Limpia el campo de texto después de agregar la tarea\n  }\n\n  function deleteTodo(id) {\n    // Elimina una tarea de la lista\n    var updatedTodos = _toConsumableArray(todos).filter(function (todo) {\n      return todo.id !== id;\n    }); // Filtra las tareas para eliminar la tarea con el ID proporcionado\n\n\n    setTodos(updatedTodos); // Actualiza el estado de las tareas con las tareas filtradas\n  }\n\n  function toggleComplete(id) {\n    // Cambia el estado de completado de una tarea\n    var updatedTodos = _toConsumableArray(todos).map(function (todo) {\n      if (todo.id === id) {\n        todo.completed = !todo.completed; // Cambia el estado de completado de la tarea actual\n      }\n\n      return todo;\n    });\n\n    setTodos(updatedTodos); // Actualiza el estado de las tareas con las tareas actualizadas\n  }\n\n  useEffect(function () {\n    // Efecto secundario para cargar las tareas almacenadas al montar el componente\n    var json = localStorage.getItem(\"todos\");\n    var loadedTodos = JSON.parse(json);\n\n    if (loadedTodos) {\n      setTodos(loadedTodos);\n    }\n  }, []);\n  useEffect(function () {\n    // Efecto secundario para guardar las tareas en el almacenamiento local cuando hay cambios\n    if (todos.length > 0) {\n      var json = JSON.stringify(todos);\n      localStorage.setItem(\"todos\", json);\n    }\n  }, [todos]);\n\n  function submitEdits(newtodo) {\n    // Envía las ediciones de una tarea\n    var updatedTodos = _toConsumableArray(todos).map(function (todo) {\n      if (todo.id === newtodo.id) {\n        todo.text = document.getElementById(newtodo.id).value; // Actualiza el texto de la tarea con el valor del campo de texto\n      }\n\n      return todo;\n    });\n\n    setTodos(updatedTodos); // Actualiza el estado de las tareas con las tareas actualizadas\n\n    setTodoEditing(null); // Restablece el estado de edición a nulo después de enviar las ediciones\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"todo-list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Todo List\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"todoAdd\" // Identificador único para el campo de entrada de nuevas tareas\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Add Todo\")), todos.map(function (todo) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: todo.id,\n      className: \"todo\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todo-text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"completed\",\n      checked: todo.completed,\n      onChange: function onChange() {\n        return toggleComplete(todo.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }), todo.id === todoEditing ? /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: todo.id // Identificador único para el campo de edición de tareas\n      ,\n      defaultValue: todo.text // Establece el valor predeterminado del campo de edición como el texto actual de la tarea\n      ,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 10\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 10\n      }\n    }, todo.text) // Muestra el texto de la tarea si no está en modo de edición\n    ), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todo-actions\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }\n    }, todo.id === todoEditing ? /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        return submitEdits(todo);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, \"Submit Edits\") // Botón para enviar las ediciones de la tarea\n    :\n    /*#__PURE__*/\n    // Botón para activar el modo de edición de la tarea\n    React.createElement(\"button\", {\n      onClick: function onClick() {\n        return setTodoEditing(todo.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        return deleteTodo(todo.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    }, \"Delete\")));\n  }));\n};\n\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","App","todos","setTodos","todoEditing","setTodoEditing","handleSubmit","e","preventDefault","todo","document","getElementById","value","newTodo","id","Date","getTime","text","trim","completed","length","concat","alert","deleteTodo","updatedTodos","filter","toggleComplete","map","json","localStorage","getItem","loadedTodos","JSON","parse","stringify","setItem","submitEdits","newtodo"],"sources":["C:/Tec/uqwxd-react_labs/todo_list/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [todos, setTodos] = useState([]); // Estado para almacenar las tareas\r\n  const [todoEditing, setTodoEditing] = useState(null); // Estado para la tarea que se está editando\r\n\r\n  function handleSubmit(e) { // Maneja el envío del formulario para agregar una nueva tarea\r\n    e.preventDefault();\r\n\r\n    // Obtener el valor del campo de texto para la nueva tarea\r\n    let todo = document.getElementById('todoAdd').value;\r\n    const newTodo = {\r\n      id: new Date().getTime(), // Asigna un ID único basado en la marca de tiempo\r\n      text: todo.trim(), // Elimina los espacios en blanco al principio y al final del texto\r\n      completed: false, // Por defecto, la tarea no está completada\r\n    };\r\n    if (newTodo.text.length > 0) { // Verifica si el texto de la tarea no está vacío\r\n        setTodos([...todos].concat(newTodo)); // Agrega la nueva tarea al estado de las tareas\r\n    } else {\r\n        alert(\"Enter Valid Task\"); // Muestra una alerta si la tarea está vacía\r\n    }\r\n    document.getElementById('todoAdd').value = \"\"; // Limpia el campo de texto después de agregar la tarea\r\n  }\r\n\r\n  function deleteTodo(id) { // Elimina una tarea de la lista\r\n    let updatedTodos = [...todos].filter((todo) => todo.id !== id); // Filtra las tareas para eliminar la tarea con el ID proporcionado\r\n    setTodos(updatedTodos); // Actualiza el estado de las tareas con las tareas filtradas\r\n  }\r\n\r\n  function toggleComplete(id) { // Cambia el estado de completado de una tarea\r\n    let updatedTodos = [...todos].map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.completed = !todo.completed; // Cambia el estado de completado de la tarea actual\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos); // Actualiza el estado de las tareas con las tareas actualizadas\r\n  }\r\n\r\n  useEffect(() => { // Efecto secundario para cargar las tareas almacenadas al montar el componente\r\n    const json = localStorage.getItem(\"todos\");\r\n    const loadedTodos = JSON.parse(json);\r\n    if (loadedTodos) {\r\n      setTodos(loadedTodos);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => { // Efecto secundario para guardar las tareas en el almacenamiento local cuando hay cambios\r\n    if(todos.length > 0) {\r\n        const json = JSON.stringify(todos);\r\n        localStorage.setItem(\"todos\", json);\r\n    }\r\n  }, [todos]);\r\n\r\n  function submitEdits(newtodo) { // Envía las ediciones de una tarea\r\n    const updatedTodos = [...todos].map((todo) => {\r\n      if (todo.id === newtodo.id) {\r\n        todo.text = document.getElementById(newtodo.id).value; // Actualiza el texto de la tarea con el valor del campo de texto\r\n        }\r\n        return todo;\r\n      });\r\n      setTodos(updatedTodos); // Actualiza el estado de las tareas con las tareas actualizadas\r\n      setTodoEditing(null); // Restablece el estado de edición a nulo después de enviar las ediciones\r\n    }\r\n\r\n    return (\r\n        <div id=\"todo-list\">\r\n          <h1>Todo List</h1>\r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              id='todoAdd' // Identificador único para el campo de entrada de nuevas tareas\r\n            />\r\n            <button type=\"submit\">Add Todo</button>\r\n          </form>\r\n    {todos.map((todo) => (\r\n\r\n  <div key={todo.id} className=\"todo\">\r\n    <div className=\"todo-text\">\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"completed\"\r\n        checked={todo.completed}\r\n        onChange={() => toggleComplete(todo.id)}\r\n      />\r\n      {todo.id === todoEditing ?\r\n        (<input\r\n          type=\"text\"\r\n          id={todo.id} // Identificador único para el campo de edición de tareas\r\n          defaultValue={todo.text} // Establece el valor predeterminado del campo de edición como el texto actual de la tarea\r\n        />) :\r\n        (<div>{todo.text}</div>) // Muestra el texto de la tarea si no está en modo de edición\r\n      }\r\n    </div>\r\n    <div className=\"todo-actions\">\r\n      {todo.id === todoEditing ?\r\n      (\r\n        <button onClick={() => submitEdits(todo)}>Submit Edits</button> // Botón para enviar las ediciones de la tarea\r\n      ) :\r\n      (\r\n        // Botón para activar el modo de edición de la tarea\r\n        <button onClick={() => setTodoEditing(todo.id)}>Edit</button> \r\n      )\r\n      }\r\n      <button onClick={() => deleteTodo(todo.id)}>Delete</button>  \r\n     </div>\r\n  </div>\r\n))}\r\n        </div>\r\n      );\r\n    };\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}